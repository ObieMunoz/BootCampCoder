c
params
c
C
com
com = @question.comments.find(params[:id])
@question.comments.find(params[:id])
@question.comments
@comment
@question
set_question
@question
c
@comment
params
c
params
c
params
c
params
c
params[:id]
params['id']
params.id
id
params
c
user_params
user
c
user_params[:password] == current_bearer.password
user_params[:password] == user.password
user_params[:password]
user.params[:password]
user.password
user
c
user
c
user_params
c
params
user_params
user
c
user_params
params
c
params
c
user_params
c
user_params
params
c
params[:user][:password]
params[:user]
params[:password]
params
c
params
c
params
c
User.create(email:params['email'])
User.create(email:params['email'], password:params['password'])
user.create(email:params['email'], password:params['password'])
params['email']
params
user.create(email: params.email, password: params.password)
user.create(email: params.email, password: params.password
user = User.create(user_params)
user_params
params
c
pretty_inspect
response_body
session
headers
location
request
content_type
response
params
:params
request
methods
params
c
params
params.
email
authenticate_with_http_basic do |email, password|
authenticate_with_http_basic
params
c
params
c
params
email
user = User.find_by email: email
params
methods
